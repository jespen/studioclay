---
deployment:
  tasks:
    - export DEPLOYPATH=/home/gyckh2yxxvf4/public_html
    - export BACKUPPATH=/home/gyckh2yxxvf4/site_backups
    - export LOGPATH=/home/gyckh2yxxvf4/deployment_logs
    
    # Skapa loggkatalog om den inte finns
    - /bin/mkdir -p $LOGPATH
    - echo "=== Deployment påbörjad: $(date) ===" > $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "Nuvarande katalog: $(pwd)" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "Git commit: $(git rev-parse HEAD)" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    
    # Skapa backup-katalog om den inte finns
    - /bin/mkdir -p $BACKUPPATH
    
    # Säkerhetskopiera aktuell webbplats före ändringar
    - echo "Skapar säkerhetskopia..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - BACKUP_DIR=$BACKUPPATH/backup_$(date +%Y%m%d_%H%M%S)
    - /bin/mkdir -p $BACKUP_DIR
    - /bin/cp -R $DEPLOYPATH/* $BACKUP_DIR/ 2>> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log || true
    
    # Bygg projektet direkt i Git-katalogen
    - echo "Installerar beroenden..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - npm install --no-audit --loglevel=error >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    - echo "Bygger projektet..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - NODE_ENV=production npm run build >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - NODE_ENV=production npm run export >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Kontrollera att out-katalogen skapades korrekt
    - echo "Kontrollerar byggresultat..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - /bin/ls -la out >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - if [ ! -d "out" ]; then echo "KRITISKT FEL: out-katalogen skapades inte!" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log; exit 1; fi
    
    # Lås deploymentkatalogen temporärt för att förhindra åtkomst under uppdatering
    - echo "<?php header('HTTP/1.1 503 Service Temporarily Unavailable'); header('Status: 503 Service Temporarily Unavailable'); header('Retry-After: 300'); ?><html><head><title>Underhåll pågår</title></head><body><h1>Underhåll pågår</h1><p>Webbplatsen uppdateras för tillfället. Försök igen om några minuter.</p></body></html>" > $DEPLOYPATH/maintenance.php
    - echo "ErrorDocument 503 /maintenance.php" > $DEPLOYPATH/.htaccess.maintenance
    - /bin/cat $DEPLOYPATH/.htaccess >> $DEPLOYPATH/.htaccess.maintenance || true
    - /bin/mv $DEPLOYPATH/.htaccess.maintenance $DEPLOYPATH/.htaccess
    
    # Kopiera bara filerna från out-katalogen, utan att radera allt först (säkrare metod)
    - echo "Kopierar byggda filer till webbplatsen..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - for file in $(find out -type f); do target_file="${file#out/}"; target_dir=$(dirname "$DEPLOYPATH/$target_file"); mkdir -p "$target_dir"; cp "$file" "$DEPLOYPATH/$target_file"; done >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Skapa standardindex.php som pekar till index.html för bakåtkompatibilitet
    - echo "<?php header('Location: index.html'); ?>" > $DEPLOYPATH/index.php
    
    # Sätt korrekta filrättigheter
    - echo "Sätter filrättigheter..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - find $DEPLOYPATH -type f -exec chmod 644 {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - find $DEPLOYPATH -type d -exec chmod 755 {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Återställ .htaccess utan underhållsläge
    - if [ -f "$DEPLOYPATH/.htaccess.bak" ]; then /bin/mv $DEPLOYPATH/.htaccess.bak $DEPLOYPATH/.htaccess; fi
    
    # Kopiera säkerhetskopior till säkerhetskopieringskatalogen
    - /bin/mkdir -p backups
    - /bin/cp -R backups/*.zip $BACKUPPATH/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1 || true
    
    # Behåll endast de 10 senaste säkerhetskopiorna i säkerhetskopieringskatalogen
    - cd $BACKUPPATH && ls -t | tail -n +11 | xargs rm -rf >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1 || true
    
    # Verifiera resultatet
    - echo "Listar filer efter deployment..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - /bin/ls -la $DEPLOYPATH >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    
    # Avslutande meddelande
    - echo "=== Deployment slutförd: $(date) ===" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "Deployment slutförd: $(date)" > $DEPLOYPATH/deploy_info.txt