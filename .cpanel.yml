---
deployment:
  tasks:
    # Set correct paths
    - export DEPLOYPATH=/home/gyckh2yxxvf4/public_html
    - export BACKUPPATH=/home/gyckh2yxxvf4/site_backups
    - export LOGPATH=/home/gyckh2yxxvf4/deployment_logs
    
    # Create log directory if it doesn't exist
    - /bin/mkdir -p $LOGPATH
    - echo "=== Deployment started: $(date) ===" > $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "Current directory: $(pwd)" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    
    # Create backup directory if it doesn't exist
    - /bin/mkdir -p $BACKUPPATH
    
    # Backup current website before changes
    - echo "Creating backup..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - BACKUP_DIR=$BACKUPPATH/backup_$(date +%Y%m%d_%H%M%S)
    - /bin/mkdir -p $BACKUP_DIR
    - /bin/cp -R $DEPLOYPATH/* $BACKUP_DIR/ 2>> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log || true
    
    # CRITICAL: Show current directory and files to diagnose structure
    - echo "DEBUG: Current working directory is $(pwd)" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "DEBUG: Listing files in current directory:" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - ls -la >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - echo "DEBUG: Listing files in out directory (if it exists):" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - if [ -d "out" ]; then ls -la out >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1; fi
    
    # Temporarily lock deployment directory to prevent access during update
    - echo "<?php header('HTTP/1.1 503 Service Temporarily Unavailable'); header('Status: 503 Service Temporarily Unavailable'); header('Retry-After: 300'); ?><html><head><title>Maintenance in progress</title></head><body><h1>Maintenance in progress</h1><p>The website is currently being updated. Please try again in a few minutes.</p></body></html>" > $DEPLOYPATH/maintenance.php
    - echo "ErrorDocument 503 /maintenance.php" > $DEPLOYPATH/.htaccess.maintenance
    - /bin/cat $DEPLOYPATH/.htaccess >> $DEPLOYPATH/.htaccess.maintenance || true
    - /bin/mv $DEPLOYPATH/.htaccess.maintenance $DEPLOYPATH/.htaccess
    
    # CLEAN TARGET DIRECTORY - First, make sure we don't delete important server files
    - echo "Cleaning target directory..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - find $DEPLOYPATH -mindepth 1 -maxdepth 1 -not -name ".well-known" -not -name "cgi-bin" -not -name ".htaccess" -not -name "maintenance.php" -exec rm -rf {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # FORCE DIRECT COPY TO PUBLIC_HTML REGARDLESS OF CURRENT DIRECTORY STRUCTURE
    - echo "Copying built files directly to website root..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    
    # Try multiple possible locations for the build output, in order of preference:
    
    # 1. If there's an out directory in current path
    - if [ -d "out" ] && [ -f "out/index.html" ]; then
        echo "Found out directory with index.html, copying contents..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log;
        /bin/cp -R out/* $DEPLOYPATH/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1;
      fi
    
    # 2. If we're already in the repositories/studioclay directory with out dir
    - if [ -d "repositories/studioclay/out" ] && [ -f "repositories/studioclay/out/index.html" ]; then
        echo "Found repositories/studioclay/out directory with index.html, copying contents..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log;
        /bin/cp -R repositories/studioclay/out/* $DEPLOYPATH/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1;
      fi
    
    # 3. If the index.html is in the current directory
    - if [ -f "index.html" ]; then
        echo "Found index.html in current directory, copying all files..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log;
        /bin/cp -R ./* $DEPLOYPATH/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1;
      fi
    
    # 4. If index.html is in repositories/studioclay
    - if [ -f "repositories/studioclay/index.html" ]; then
        echo "Found index.html in repositories/studioclay, copying all files..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log;
        /bin/cp -R repositories/studioclay/* $DEPLOYPATH/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1;
      fi
    
    # Create standard index.php that points to index.html for backward compatibility
    - echo "<?php header('Location: index.html'); ?>" > $DEPLOYPATH/index.php
    
    # Set correct file permissions
    - echo "Setting file permissions..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - find $DEPLOYPATH -type f -exec chmod 644 {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - find $DEPLOYPATH -type d -exec chmod 755 {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Verify result
    - echo "Listing files after deployment..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - /bin/ls -la $DEPLOYPATH >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    
    # Final message
    - echo "=== Deployment completed: $(date) ===" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "Deployment completed: $(date)" > $DEPLOYPATH/deploy_info.txt