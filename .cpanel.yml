---
deployment:
  tasks:
    # Set correct paths
    - export DEPLOYPATH=/home/gyckh2yxxvf4/public_html
    - export BACKUPPATH=/home/gyckh2yxxvf4/site_backups
    - export LOGPATH=/home/gyckh2yxxvf4/deployment_logs
    
    # Create log directory if it doesn't exist
    - /bin/mkdir -p $LOGPATH
    - echo "=== Deployment started: $(date) ===" > $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "Current directory: $(pwd)" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    
    # Fix parent directory permissions first - CRITICAL for access
    - echo "Setting parent directory permissions..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - chmod 755 /home/gyckh2yxxvf4 >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - chmod 755 /home >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - chmod 755 $DEPLOYPATH >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - chmod 755 $BACKUPPATH >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - chmod 755 $LOGPATH >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Create backup directory if it doesn't exist
    - /bin/mkdir -p $BACKUPPATH
    
    # Backup current website before changes
    - echo "Creating backup..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - BACKUP_DIR=$BACKUPPATH/backup_$(date +%Y%m%d_%H%M%S)
    - /bin/mkdir -p $BACKUP_DIR
    - /bin/cp -R $DEPLOYPATH/* $BACKUP_DIR/ 2>> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log || true
    - chmod -R 755 $BACKUP_DIR >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # CRITICAL: Show current directory and files to diagnose structure
    - echo "DEBUG: Current working directory is $(pwd)" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "DEBUG: Listing files in current directory:" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - ls -la >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Build project with flattened structure
    - echo "Building project with flattened structure..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - npm install --no-audit --loglevel=error >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - NODE_ENV=production npm run export >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Check that out directory was created correctly
    - echo "Checking build result..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - ls -la out >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - if [ ! -d "out" ]; then echo "CRITICAL ERROR: out directory was not created!" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log; exit 1; fi
    
    # CRITICAL: Create a fallback index.html if one doesn't exist
    - echo "Checking for index.html..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - if [ ! -f "out/index.html" ]; then 
        echo "WARNING: index.html not found in build output! Creating a basic version..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log;
        echo '<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Studio Clay</title><meta http-equiv="refresh" content="0;url=test.html"></head><body><p>Redirecting to site...</p></body></html>' > out/index.html;
      fi
    - echo "Index.html exists:" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - ls -la out/index.html >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Set permissions for output files BEFORE copying
    - echo "Setting output directory permissions..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - find out -type f -exec chmod 644 {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - find out -type d -exec chmod 755 {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Temporarily lock deployment directory to prevent access during update
    - echo "<?php header('HTTP/1.1 503 Service Temporarily Unavailable'); header('Status: 503 Service Temporarily Unavailable'); header('Retry-After: 300'); ?><html><head><title>Maintenance in progress</title></head><body><h1>Maintenance in progress</h1><p>The website is currently being updated. Please try again in a few minutes.</p></body></html>" > $DEPLOYPATH/maintenance.php
    - echo "ErrorDocument 503 /maintenance.php" > $DEPLOYPATH/.htaccess.maintenance
    - /bin/cat $DEPLOYPATH/.htaccess >> $DEPLOYPATH/.htaccess.maintenance || true
    - /bin/mv $DEPLOYPATH/.htaccess.maintenance $DEPLOYPATH/.htaccess
    
    # CLEAN TARGET DIRECTORY - First, make sure we don't delete important server files
    - echo "Cleaning target directory..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - find $DEPLOYPATH -mindepth 1 -maxdepth 1 -not -name ".well-known" -not -name "cgi-bin" -not -name ".htaccess" -not -name "maintenance.php" -exec rm -rf {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # DIRECTLY COPY FILES FROM FLATTENED BUILD TO ROOT LEVEL
    - echo "Copying built files directly to website root..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - /bin/cp -R out/* $DEPLOYPATH/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - /bin/cp -R out/.htaccess $DEPLOYPATH/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1 || true
    
    # VERIFY critical files were copied
    - echo "Verifying critical files were copied..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - ls -la $DEPLOYPATH/index.html >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1 || echo "WARNING: index.html not found after copy!" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    
    # Create standard index.php that points to index.html for backward compatibility
    - echo "Creating PHP index file..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "<?php header('Location: index.html'); ?>" > $DEPLOYPATH/index.php
    
    # ADDITIONAL FALLBACK: Create a basic index.html if it's still missing after copy
    - echo "Creating fallback index.html if needed..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - if [ ! -f "$DEPLOYPATH/index.html" ]; then 
        echo "CRITICAL: index.html still missing after copy! Creating emergency version..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log;
        echo '<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Studio Clay</title><style>body{font-family:Arial,sans-serif;max-width:800px;margin:40px auto;padding:20px;text-align:center}</style></head><body><h1>Studio Clay</h1><p>Welcome to Studio Clay. The website is being updated. Please check back shortly.</p><p><a href="test.html">View Test Page</a></p></body></html>' > $DEPLOYPATH/index.html;
      fi
    
    # Set correct file permissions - thorough permission setting
    - echo "Setting file permissions..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - find $DEPLOYPATH -type f -exec chmod 644 {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - find $DEPLOYPATH -type d -exec chmod 755 {} \; >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Set specific permissions for critical files
    - echo "Setting permissions for critical files..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - chmod 644 $DEPLOYPATH/.htaccess >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - chmod 644 $DEPLOYPATH/index.html >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - chmod 644 $DEPLOYPATH/index.php >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - chmod 644 $DEPLOYPATH/test.html >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1 || true
    
    # Final verification of index files
    - echo "Final verification of index files:" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - ls -la $DEPLOYPATH/index.* >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Final parent directory permissions check
    - echo "Final parent directory permissions check..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - ls -la /home/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    - ls -la /home/gyckh2yxxvf4/ >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log 2>&1
    
    # Verify result
    - echo "Listing files after deployment..." >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - /bin/ls -la $DEPLOYPATH >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    
    # Final message
    - echo "=== Deployment completed: $(date) ===" >> $LOGPATH/deploy_$(date +%Y%m%d_%H%M%S).log
    - echo "Deployment completed: $(date)" > $DEPLOYPATH/deploy_info.txt